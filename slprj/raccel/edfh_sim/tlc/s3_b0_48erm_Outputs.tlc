%implements s3_b0_48erm_Outputs "C"

%function OutputsForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

__m128d tmp_p;
real_T tmp[9];
real_T au0qcnrs4c_idx_0;
real_T au0qcnrs4c_idx_1;
real_T au0qcnrs4c_idx_2;
real_T au0qcnrs4c_idx_3;
int32_T i;
int32_T i_p;
%closefile localVarDecl
%assign tlcOutputsFcnOfS3B0 = OpaqueTLCBlockFcn("Outputs", 3, 0, 0, 2, 0)
%assign tlcOutputsFcnOfS3B1 = OpaqueTLCBlockFcn("Outputs", 3, 1, 0, 2, 1)
%assign tlcOutputsFcnOfS3B2 = OpaqueTLCBlockFcn("Outputs", 3, 2, 0, 2, 2)
%assign tlcOutputsFcnOfS3B3 = OpaqueTLCBlockFcn("Outputs", 3, 3, 0, 2, 3)
%assign tlcOutputsFcnOfS3B4 = OpaqueTLCBlockFcn("Outputs", 3, 4, 0, 2, 4)
%assign tlcOutputsFcnOfS3B5 = OpaqueTLCBlockFcn("Outputs", 3, 5, 0, 2, 5)
%assign tlcOutputsFcnOfS3B6 = OpaqueTLCBlockFcn("Outputs", 3, 6, 0, 2, 6)
%<SLibGetRootInportsFromFile(system, TLC_FALSE)>
%<SLibGenerateExtModeOutput(system)>
%<tlcOutputsFcnOfS3B0>\
%<tlcOutputsFcnOfS3B1>\
%<tlcOutputsFcnOfS3B2>\
%<tlcOutputsFcnOfS3B3>\
%<tlcOutputsFcnOfS3B4>\
%<tlcOutputsFcnOfS3B5>\
%<tlcOutputsFcnOfS3B6>\
tmp[0] = muDoubleScalarCos(rtB.jav0pvzgcw[1]) * muDoubleScalarCos(rtB.jav0pvzgcw[2]);
tmp[3] = muDoubleScalarSin(rtB.jav0pvzgcw[0]) * muDoubleScalarSin(rtB.jav0pvzgcw[1]) * muDoubleScalarCos(rtB.jav0pvzgcw[2]) - muDoubleScalarCos(rtB.jav0pvzgcw[0]) * muDoubleScalarSin(rtB.jav0pvzgcw[2]);
tmp[6] = muDoubleScalarCos(rtB.jav0pvzgcw[0]) * muDoubleScalarSin(rtB.jav0pvzgcw[1]) * muDoubleScalarCos(rtB.jav0pvzgcw[2]) + muDoubleScalarSin(rtB.jav0pvzgcw[0]) * muDoubleScalarSin(rtB.jav0pvzgcw[2]);
tmp[1] = muDoubleScalarCos(rtB.jav0pvzgcw[1]) * muDoubleScalarSin(rtB.jav0pvzgcw[2]);
tmp[4] = muDoubleScalarSin(rtB.jav0pvzgcw[0]) * muDoubleScalarSin(rtB.jav0pvzgcw[1]) * muDoubleScalarSin(rtB.jav0pvzgcw[2]) + muDoubleScalarCos(rtB.jav0pvzgcw[0]) * muDoubleScalarCos(rtB.jav0pvzgcw[2]);
tmp[7] = muDoubleScalarCos(rtB.jav0pvzgcw[0]) * muDoubleScalarSin(rtB.jav0pvzgcw[1]) * muDoubleScalarSin(rtB.jav0pvzgcw[2]) - muDoubleScalarSin(rtB.jav0pvzgcw[0]) * muDoubleScalarCos(rtB.jav0pvzgcw[2]);
tmp[2] = -muDoubleScalarSin(rtB.jav0pvzgcw[1]);
tmp[5] = muDoubleScalarSin(rtB.jav0pvzgcw[0]) * muDoubleScalarCos(rtB.jav0pvzgcw[1]);
tmp[8] = muDoubleScalarCos(rtB.jav0pvzgcw[0]) * muDoubleScalarCos(rtB.jav0pvzgcw[1]);
for (i = 0; i < 3; i++) {
    rtB.oev3zh3h14[i] = 0.0;
    rtB.oev3zh3h14[i] += tmp[i] * rtB.jav0pvzgcw[9];
    rtB.oev3zh3h14[i] += tmp[i + 3] * rtB.jav0pvzgcw[10];
    rtB.oev3zh3h14[i] += tmp[i + 6] * rtB.jav0pvzgcw[11];
}
au0qcnrs4c_idx_0 = muDoubleScalarCos(rtB.jav0pvzgcw[2]);
au0qcnrs4c_idx_2 = muDoubleScalarSin(rtB.jav0pvzgcw[2]);
au0qcnrs4c_idx_1 = muDoubleScalarCos(rtB.jav0pvzgcw[2]) * 0.0 * 0.0 - muDoubleScalarSin(rtB.jav0pvzgcw[2]);
au0qcnrs4c_idx_3 = 0.0 * muDoubleScalarSin(rtB.jav0pvzgcw[2]) + muDoubleScalarCos(rtB.jav0pvzgcw[2]);
if (%<(SLibCGIRIsSampleHit(2, 3))>) {
    rtB.jnrwezmi3r[0] = rtP.x_ref_Value - rtB.jav0pvzgcw[6];
    rtB.jnrwezmi3r[1] = rtP.y_ref_Value - rtB.jav0pvzgcw[7];
    rtB.jnrwezmi3r[2] = rtP.vx_ref_Value - rtB.oev3zh3h14[0];
    rtB.jnrwezmi3r[3] = rtP.vy_ref_Value - rtB.oev3zh3h14[1];
}
rtB.hsubziybkn[0] = 0.0;
rtB.kts2fhz5mg[0] = 0.0;
rtB.hsubziybkn[0] += au0qcnrs4c_idx_0 * rtB.jnrwezmi3r[0];
rtB.kts2fhz5mg[0] += au0qcnrs4c_idx_0 * rtB.jnrwezmi3r[2];
rtB.hsubziybkn[0] += au0qcnrs4c_idx_2 * rtB.jnrwezmi3r[1];
rtB.kts2fhz5mg[0] += au0qcnrs4c_idx_2 * rtB.jnrwezmi3r[3];
rtB.gkx2f1rftl[0] = rtB.hsubziybkn[0];
rtB.gkx2f1rftl[2] = rtB.kts2fhz5mg[0];
rtB.hsubziybkn[1] = 0.0;
rtB.kts2fhz5mg[1] = 0.0;
rtB.hsubziybkn[1] += au0qcnrs4c_idx_1 * rtB.jnrwezmi3r[0];
rtB.kts2fhz5mg[1] += au0qcnrs4c_idx_1 * rtB.jnrwezmi3r[2];
rtB.hsubziybkn[1] += au0qcnrs4c_idx_3 * rtB.jnrwezmi3r[1];
rtB.kts2fhz5mg[1] += au0qcnrs4c_idx_3 * rtB.jnrwezmi3r[3];
rtB.gkx2f1rftl[1] = rtB.hsubziybkn[1];
rtB.gkx2f1rftl[3] = rtB.kts2fhz5mg[1];
for (i = 0; i <= 0; i += 2) {
    _mm_storeu_pd(&rtB.juc01x3xob[i], _mm_set1_pd(0.0));
    tmp_p = _mm_loadu_pd(&rtB.juc01x3xob[i]);
    _mm_storeu_pd(&rtB.juc01x3xob[i], _mm_add_pd(_mm_mul_pd(_mm_loadu_pd(&rtP.K_pos[i]), _mm_set1_pd(rtB.gkx2f1rftl[0])), tmp_p));
    tmp_p = _mm_loadu_pd(&rtB.juc01x3xob[i]);
    _mm_storeu_pd(&rtB.juc01x3xob[i], _mm_add_pd(_mm_mul_pd(_mm_loadu_pd(&rtP.K_pos[i + 2]), _mm_set1_pd(rtB.gkx2f1rftl[1])), tmp_p));
    tmp_p = _mm_loadu_pd(&rtB.juc01x3xob[i]);
    _mm_storeu_pd(&rtB.juc01x3xob[i], _mm_add_pd(_mm_mul_pd(_mm_loadu_pd(&rtP.K_pos[i + 4]), _mm_set1_pd(rtB.gkx2f1rftl[2])), tmp_p));
    tmp_p = _mm_loadu_pd(&rtB.juc01x3xob[i]);
    _mm_storeu_pd(&rtB.juc01x3xob[i], _mm_add_pd(_mm_mul_pd(_mm_loadu_pd(&rtP.K_pos[i + 6]), _mm_set1_pd(rtB.gkx2f1rftl[3])), tmp_p));
}
rtB.li5s4mgwqw = rtB.juc01x3xob[0];
rtB.mm0cq5wcxg = rtB.juc01x3xob[1];
if (%<(SLibCGIRIsSampleHit(2, 3))>) {
    for (i = 0; i < 6; i++) {
        rtB.kbri3w3tmu[i] = rtB.jav0pvzgcw[i];
    }
    rtB.kbri3w3tmu[6] = rtB.jav0pvzgcw[8];
    rtB.kbri3w3tmu[7] = rtB.oev3zh3h14[2];
}
rtB.pkjwitjmns[0] = rtB.li5s4mgwqw - rtB.kbri3w3tmu[0];
rtB.pkjwitjmns[1] = rtB.mm0cq5wcxg - rtB.kbri3w3tmu[1];
rtB.pkjwitjmns[2] = rtP.yaw_ref_Value - rtB.kbri3w3tmu[2];
rtB.pkjwitjmns[3] = rtP.omega_x_ref_Value - rtB.kbri3w3tmu[3];
rtB.pkjwitjmns[4] = rtP.omega_y_ref_Value - rtB.kbri3w3tmu[4];
rtB.pkjwitjmns[5] = rtP.omega_z_ref_Value - rtB.kbri3w3tmu[5];
rtB.pkjwitjmns[6] = rtP.z_ref_Value - rtB.kbri3w3tmu[6];
rtB.pkjwitjmns[7] = rtP.vz_ref_Value - rtB.kbri3w3tmu[7];
rtB.feeji2w5r5[2] = rtB.pkjwitjmns[2];
if (rtB.pkjwitjmns[2] > 3.1415926535897931) {
    rtB.feeji2w5r5[2] = rtB.pkjwitjmns[2] - 6.2831853071795862;
}
rtB.feeji2w5r5[0] = rtB.pkjwitjmns[0];
rtB.feeji2w5r5[1] = rtB.pkjwitjmns[1];
for (i = 0; i < 5; i++) {
    rtB.feeji2w5r5[i + 3] = rtB.pkjwitjmns[i + 3];
}
au0qcnrs4c_idx_0 = 0.0;
for (i = 0; i < 8; i++) {
    au0qcnrs4c_idx_0 += rtP.G_hov[i] * rtB.feeji2w5r5[i];
}
rtB.meuelqs52q = au0qcnrs4c_idx_0;
for (i = 0; i <= 0; i += 2) {
    _mm_storeu_pd(&rtB.f5scxu4cdl[i], _mm_set1_pd(0.0));
    tmp_p = _mm_loadu_pd(&rtB.f5scxu4cdl[i]);
    _mm_storeu_pd(&rtB.f5scxu4cdl[i], _mm_add_pd(_mm_mul_pd(_mm_loadu_pd(&rtP.G_pos[i]), _mm_set1_pd(rtB.gkx2f1rftl[0])), tmp_p));
    tmp_p = _mm_loadu_pd(&rtB.f5scxu4cdl[i]);
    _mm_storeu_pd(&rtB.f5scxu4cdl[i], _mm_add_pd(_mm_mul_pd(_mm_loadu_pd(&rtP.G_pos[i + 2]), _mm_set1_pd(rtB.gkx2f1rftl[1])), tmp_p));
    tmp_p = _mm_loadu_pd(&rtB.f5scxu4cdl[i]);
    _mm_storeu_pd(&rtB.f5scxu4cdl[i], _mm_add_pd(_mm_mul_pd(_mm_loadu_pd(&rtP.G_pos[i + 4]), _mm_set1_pd(rtB.gkx2f1rftl[2])), tmp_p));
    tmp_p = _mm_loadu_pd(&rtB.f5scxu4cdl[i]);
    _mm_storeu_pd(&rtB.f5scxu4cdl[i], _mm_add_pd(_mm_mul_pd(_mm_loadu_pd(&rtP.G_pos[i + 6]), _mm_set1_pd(rtB.gkx2f1rftl[3])), tmp_p));
}
/* Limited  Integrator  */
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    if (rtX.lc4otgpiic >= rtP.Integrator_UpperSat) {
        if (rtX.lc4otgpiic != rtP.Integrator_UpperSat) {
            rtX.lc4otgpiic = rtP.Integrator_UpperSat;
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
        rtDW.az1pptk1uk = 3;
    } else if (rtX.lc4otgpiic <= rtP.Integrator_LowerSat) {
        if (rtX.lc4otgpiic != rtP.Integrator_LowerSat) {
            rtX.lc4otgpiic = rtP.Integrator_LowerSat;
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
        rtDW.az1pptk1uk = 4;
    } else {
        if (rtDW.az1pptk1uk != 0) {
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
        rtDW.az1pptk1uk = 0;
    }
}
/* Limited  Integrator  */
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    if (rtX.duh1suzfu4[0] >= rtP.Integrator1_UpperSat) {
        if (rtX.duh1suzfu4[0] != rtP.Integrator1_UpperSat) {
            rtX.duh1suzfu4[0] = rtP.Integrator1_UpperSat;
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
        rtDW.effzrz3v0k[0] = 3;
    } else if (rtX.duh1suzfu4[0] <= rtP.Integrator1_LowerSat) {
        if (rtX.duh1suzfu4[0] != rtP.Integrator1_LowerSat) {
            rtX.duh1suzfu4[0] = rtP.Integrator1_LowerSat;
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
        rtDW.effzrz3v0k[0] = 4;
    } else {
        if (rtDW.effzrz3v0k[0] != 0) {
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
        rtDW.effzrz3v0k[0] = 0;
    }
    if (rtX.duh1suzfu4[1] >= rtP.Integrator1_UpperSat) {
        if (rtX.duh1suzfu4[1] != rtP.Integrator1_UpperSat) {
            rtX.duh1suzfu4[1] = rtP.Integrator1_UpperSat;
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
        rtDW.effzrz3v0k[1] = 3;
    } else if (rtX.duh1suzfu4[1] <= rtP.Integrator1_LowerSat) {
        if (rtX.duh1suzfu4[1] != rtP.Integrator1_LowerSat) {
            rtX.duh1suzfu4[1] = rtP.Integrator1_LowerSat;
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
        rtDW.effzrz3v0k[1] = 4;
    } else {
        if (rtDW.effzrz3v0k[1] != 0) {
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
        rtDW.effzrz3v0k[1] = 0;
    }
}
for (i = 0; i < 4; i++) {
    rtB.iiiv0adyyi[i] = 0.0;
    for (i_p = 0; i_p < 8; i_p++) {
        rtB.iiiv0adyyi[i] += rtP.K_red[(i_p << 2) + i] * rtB.feeji2w5r5[i_p];
    }
}
if (%<(SLibCGIRIsSampleHit(1, 3))>) {
    rtDW.oeaulp1qzd = (%<(SLibCG_SE(LibGetTaskTime(1)))> >= rtP.x_r_Time);
}
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign ::GlobalCurrentTID = []
%endif
%endfunction
%function OutputsFcnProtoTypeForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 2, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign ::GlobalCurrentTID = []
%endif
%endfunction
